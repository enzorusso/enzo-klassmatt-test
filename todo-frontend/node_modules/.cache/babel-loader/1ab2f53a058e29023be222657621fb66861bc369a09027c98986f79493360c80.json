{"ast":null,"code":"var _jsxFileName = \"/Users/enzorusso/Downloads/enzo-klassmatt-test/todo-frontend/src/components/ListItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencil, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/InputComponent.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { editTask } from '../services/TaskService';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListItem({\n  task,\n  onEdit,\n  onDelete\n}) {\n  _s();\n  const [checked, isChecked] = useState(task.checked);\n  const handleCheckedChange = async () => {\n    const newState = !checked;\n    isChecked(newState);\n    try {\n      await editTask({\n        ...task,\n        checked: newState\n      });\n      if (newState) {\n        toast.success('Parabéns! Tarefa concluída!');\n      }\n    } catch (err) {\n      toast.error(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: checked,\n      onChange: handleCheckedChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: task.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: task.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: \"icon-button\",\n      onClick: () => onEdit(task),\n      icon: faPencil\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      className: \"icon-button\",\n      onClick: () => onDelete(task),\n      icon: faTrash\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(ListItem, \"EZ1oQccYlJAg77sSf6BbCpbo2FY=\");\n_c = ListItem;\nexport default ListItem;\nvar _c;\n$RefreshReg$(_c, \"ListItem\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faPencil","faTrash","editTask","toast","jsxDEV","_jsxDEV","ListItem","task","onEdit","onDelete","_s","checked","isChecked","handleCheckedChange","newState","success","err","error","message","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","title","description","onClick","icon","_c","$RefreshReg$"],"sources":["/Users/enzorusso/Downloads/enzo-klassmatt-test/todo-frontend/src/components/ListItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCalendar, faCircleCheck, faPencil, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { Task } from '../model/task';\n\nimport '../styles/InputComponent.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport DatePicker from 'react-datepicker';\nimport { editTask } from '../services/TaskService';\nimport { toast } from 'react-toastify';\n\nfunction ListItem({task, onEdit, onDelete}:{task: Task, onEdit: (task: Task) => void, onDelete: (task: Task) => void}) {\n  const [checked, isChecked] = useState(task.checked);\n\n  const handleCheckedChange = async () => {\n    const newState = !checked;\n    isChecked(newState);\n    try {\n      await editTask({...task, checked: newState});\n      if(newState) {\n        toast.success('Parabéns! Tarefa concluída!')\n      }\n    } catch (err: any) {\n      toast.error(err.message);\n    }\n  }\n\n  return (\n    \n    <div className='item'>\n      <input \n        type='checkbox' \n        checked={checked}\n        onChange={handleCheckedChange}\n      />\n      <h4>{task.title}</h4>\n      <p>{task.description}</p>\n      <FontAwesomeIcon className='icon-button' onClick={() => onEdit(task)} icon={faPencil}></FontAwesomeIcon>\n      <FontAwesomeIcon className='icon-button' onClick={() => onDelete(task)} icon={faTrash}></FontAwesomeIcon>\n      </div>\n        );\n}\n\nexport default ListItem;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAAoCC,QAAQ,EAAEC,OAAO,QAAQ,mCAAmC;AAGhG,OAAO,8BAA8B;AACrC,OAAO,4CAA4C;AAEnD,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAC;EAACC,IAAI;EAAEC,MAAM;EAAEC;AAAmF,CAAC,EAAE;EAAAC,EAAA;EACrH,MAAM,CAACC,OAAO,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAACS,IAAI,CAACI,OAAO,CAAC;EAEnD,MAAME,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC,MAAMC,QAAQ,GAAG,CAACH,OAAO;IACzBC,SAAS,CAACE,QAAQ,CAAC;IACnB,IAAI;MACF,MAAMZ,QAAQ,CAAC;QAAC,GAAGK,IAAI;QAAEI,OAAO,EAAEG;MAAQ,CAAC,CAAC;MAC5C,IAAGA,QAAQ,EAAE;QACXX,KAAK,CAACY,OAAO,CAAC,6BAA6B,CAAC;MAC9C;IACF,CAAC,CAAC,OAAOC,GAAQ,EAAE;MACjBb,KAAK,CAACc,KAAK,CAACD,GAAG,CAACE,OAAO,CAAC;IAC1B;EACF,CAAC;EAED,oBAEEb,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBf,OAAA;MACEgB,IAAI,EAAC,UAAU;MACfV,OAAO,EAAEA,OAAQ;MACjBW,QAAQ,EAAET;IAAoB;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFrB,OAAA;MAAAe,QAAA,EAAKb,IAAI,CAACoB;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBrB,OAAA;MAAAe,QAAA,EAAIb,IAAI,CAACqB;IAAW;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA,CAACN,eAAe;MAACoB,SAAS,EAAC,aAAa;MAACU,OAAO,EAAEA,CAAA,KAAMrB,MAAM,CAACD,IAAI,CAAE;MAACuB,IAAI,EAAE9B;IAAS;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC,eACxGrB,OAAA,CAACN,eAAe;MAACoB,SAAS,EAAC,aAAa;MAACU,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAACF,IAAI,CAAE;MAACuB,IAAI,EAAE7B;IAAQ;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAkB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpG,CAAC;AAEZ;AAAChB,EAAA,CA9BQJ,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}