{"ast":null,"code":"var _jsxFileName = \"/Users/enzorusso/Downloads/enzo-klassmatt-test/todo-frontend/src/components/ListComponent.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/ListComponent.css';\nimport { createTask, deleteTask, editTask, getAll } from '../services/TaskService';\nimport ListItem from './ListItem';\nimport Modal from './Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TASK = {\n  title: '',\n  description: '',\n  checked: false,\n  id: ''\n};\nfunction ListComponent() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [activeEditTask, setActiveEditTask] = useState(DEFAULT_TASK);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response = await getAll();\n      setTasks(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n  const openModal = task => {\n    console.log('open', open);\n    if (task) {\n      setActiveEditTask(task);\n    }\n    setIsModalOpen(true);\n  };\n  const handleDeleteTask = async ({\n    id\n  }) => {\n    try {\n      await deleteTask(id);\n    } catch (err) {}\n    fetchTasks();\n  };\n  const saveTask = async task => {\n    if (task !== null && task !== void 0 && task.id) {\n      await editTask(task);\n    } else {\n      await createTask(task);\n    }\n    setIsModalOpen(false);\n    setActiveEditTask(DEFAULT_TASK);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"LEMBRETES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: [(tasks === null || tasks === void 0 ? void 0 : tasks.length) > 0 ? tasks.map((task, i) => /*#__PURE__*/_jsxDEV(ListItem, {\n        task: task,\n        onDelete: handleDeleteTask,\n        onEdit: () => openModal(task)\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"None\",\n        children: \" Nenhum lembrete dispon\\xEDvel. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Add-button\",\n        onClick: () => openModal(),\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCirclePlus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), \"\\xA0 Novo Lembrete\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        open: isModalOpen,\n        task: activeEditTask,\n        onSave: saveTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(ListComponent, \"x/XEH65kxuniyiTz93Qac+7bDcs=\");\n_c = ListComponent;\nexport default ListComponent;\nvar _c;\n$RefreshReg$(_c, \"ListComponent\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","FontAwesomeIcon","faCirclePlus","createTask","deleteTask","editTask","getAll","ListItem","Modal","jsxDEV","_jsxDEV","DEFAULT_TASK","title","description","checked","id","ListComponent","_s","tasks","setTasks","activeEditTask","setActiveEditTask","isModalOpen","setIsModalOpen","fetchTasks","response","err","console","log","openModal","task","open","handleDeleteTask","saveTask","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","i","onDelete","onEdit","onClick","icon","onSave","_c","$RefreshReg$"],"sources":["/Users/enzorusso/Downloads/enzo-klassmatt-test/todo-frontend/src/components/ListComponent.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCirclePlus } from '@fortawesome/free-solid-svg-icons';\n\nimport InputComponent from './InputComponent';\nimport '../styles/ListComponent.css';\nimport { CreateTask, Task } from '../model/task';\nimport { createTask, deleteTask, editTask, getAll } from '../services/TaskService';\nimport ListItem from './ListItem';\nimport Modal from './Modal';\nimport { toast } from 'react-toastify';\nconst DEFAULT_TASK = {title: '', description: '', checked: false, id: ''};\nfunction ListComponent() {\n  const [tasks, setTasks] = useState<Task[]>([]);\n  const [activeEditTask, setActiveEditTask] = useState<Task>(DEFAULT_TASK);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const fetchTasks = useCallback(async () => {\n    try {\n      const response: Task[] = await getAll();\n      setTasks(response);\n    } catch (err) {\n      console.log(err);\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchTasks();\n  }, [fetchTasks]);\n\n  const openModal = (task?: Task) => {\n    console.log('open', open)\n    if(task) {\n      setActiveEditTask(task);\n    }\n    setIsModalOpen(true);\n  }\n\n  const handleDeleteTask =async ({ id}: { id:string}) => {\n    try{\n      await deleteTask(id)\n\n    } catch(err: any) {\n      \n    }\n      fetchTasks();\n  }\n\n  const saveTask = async (task: Task) => {\n    if(task?.id) {\n      await editTask(task)\n    } else {\n      await createTask(task);\n    }\n    setIsModalOpen(false);\n    setActiveEditTask(DEFAULT_TASK);\n  }\n\n  return (\n    <div className='content'>\n      <p>LEMBRETES</p>\n      <div className='list'>\n        {tasks?.length > 0 ? \n        tasks.map((task, i) => (\n          <ListItem task={task} onDelete={handleDeleteTask} onEdit={() => openModal(task)} key={task.id} />)) :\n          <p className='None'> Nenhum lembrete dispon√≠vel. </p>\n        }\n        <button className='Add-button' onClick={() => openModal()}>\n          <FontAwesomeIcon icon={faCirclePlus}></FontAwesomeIcon>&nbsp;\n            Novo Lembrete\n        </button>\n        \n          <Modal  open={isModalOpen} task={activeEditTask} onSave={saveTask} />\n        \n      </div>\n    </div>\n  );\n}\n\nexport default ListComponent;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}