{"ast":null,"code":"import api from './api';\nconst serviceName = '/tasks';\nexport async function getAll() {\n  const response = await api.get(`${serviceName}`);\n  return response.data.data;\n}\nexport async function createTask(task) {\n  let response = null;\n  await api.post(`${serviceName}`, task).then(data => response = data).catch(error => {\n    throw error;\n  });\n  return response;\n}\nexport async function deleteTask(id) {\n  const response = await api.delete(`${serviceName}/${id}`).then(response => response.data.data).catch(error => {\n    throw error;\n  });\n  return response;\n}\nexport async function editTask(id, task) {\n  const response = await api.put(`${serviceName}/${id}`, task).then(response => response.data.data).catch(error => {\n    console.log(error);\n  });\n  return response;\n}","map":{"version":3,"names":["api","serviceName","getAll","response","get","data","createTask","task","post","then","catch","error","deleteTask","id","delete","editTask","put","console","log"],"sources":["/Users/enzorusso/Downloads/enzo-klassmatt-test/todo-frontend/src/services/TaskService.ts"],"sourcesContent":["import api from './api';\nimport { Task } from '../model/task';\n\nconst serviceName = '/tasks';\n\nexport async function getAll(): Promise<Task[]> {\n  const response = await api.get(`${serviceName}`);\n  return response.data.data;\n}\n\nexport async function createTask(task: Task) {\n  let response = null;\n  await api\n    .post(`${serviceName}`, task)\n    .then(data => (response = data))\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nexport async function deleteTask(id: number): Promise<any> {\n  const response = await api\n    .delete(`${serviceName}/${id}`)\n    .then(response => response.data.data)\n    .catch(error => {\n      throw error;\n    });\n  return response;\n}\n\nexport async function editTask(\n  id: number,\n  task: Task,\n): Promise<Task> {\n  const response = await api\n    .put(`${serviceName}/${id}`, task)\n    .then(response => response.data.data)\n    .catch(error => {\n      console.log(error);\n    });\n  return response;\n}\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAGvB,MAAMC,WAAW,GAAG,QAAQ;AAE5B,OAAO,eAAeC,MAAMA,CAAA,EAAoB;EAC9C,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAE,GAAEH,WAAY,EAAC,CAAC;EAChD,OAAOE,QAAQ,CAACE,IAAI,CAACA,IAAI;AAC3B;AAEA,OAAO,eAAeC,UAAUA,CAACC,IAAU,EAAE;EAC3C,IAAIJ,QAAQ,GAAG,IAAI;EACnB,MAAMH,GAAG,CACNQ,IAAI,CAAE,GAAEP,WAAY,EAAC,EAAEM,IAAI,CAAC,CAC5BE,IAAI,CAACJ,IAAI,IAAKF,QAAQ,GAAGE,IAAK,CAAC,CAC/BK,KAAK,CAACC,KAAK,IAAI;IACd,MAAMA,KAAK;EACb,CAAC,CAAC;EACJ,OAAOR,QAAQ;AACjB;AAEA,OAAO,eAAeS,UAAUA,CAACC,EAAU,EAAgB;EACzD,MAAMV,QAAQ,GAAG,MAAMH,GAAG,CACvBc,MAAM,CAAE,GAAEb,WAAY,IAAGY,EAAG,EAAC,CAAC,CAC9BJ,IAAI,CAACN,QAAQ,IAAIA,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CACpCK,KAAK,CAACC,KAAK,IAAI;IACd,MAAMA,KAAK;EACb,CAAC,CAAC;EACJ,OAAOR,QAAQ;AACjB;AAEA,OAAO,eAAeY,QAAQA,CAC5BF,EAAU,EACVN,IAAU,EACK;EACf,MAAMJ,QAAQ,GAAG,MAAMH,GAAG,CACvBgB,GAAG,CAAE,GAAEf,WAAY,IAAGY,EAAG,EAAC,EAAEN,IAAI,CAAC,CACjCE,IAAI,CAACN,QAAQ,IAAIA,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC,CACpCK,KAAK,CAACC,KAAK,IAAI;IACdM,OAAO,CAACC,GAAG,CAACP,KAAK,CAAC;EACpB,CAAC,CAAC;EACJ,OAAOR,QAAQ;AACjB"},"metadata":{},"sourceType":"module","externalDependencies":[]}